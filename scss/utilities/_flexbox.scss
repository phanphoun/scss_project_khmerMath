@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;

// Flexbox utilities

// Responsive flex utilities
@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint-up($breakpoint) {
    .flex#{$infix}-row { flex-direction: row !important; }
    .flex#{$infix}-column { flex-direction: column !important; }
    .flex#{$infix}-row-reverse { flex-direction: row-reverse !important; }
    .flex#{$infix}-column-reverse { flex-direction: column-reverse !important; }

    .flex#{$infix}-wrap { flex-wrap: wrap !important; }
    .flex#{$infix}-nowrap { flex-wrap: nowrap !important; }
    .flex#{$infix}-wrap-reverse { flex-wrap: wrap-reverse !important; }

    .flex#{$infix}-fill { flex: 1 1 auto !important; }
    .flex#{$infix}-grow-0 { flex-grow: 0 !important; }
    .flex#{$infix}-grow-1 { flex-grow: 1 !important; }
    .flex#{$infix}-shrink-0 { flex-shrink: 0 !important; }
    .flex#{$infix}-shrink-1 { flex-shrink: 1 !important; }

    .justify-content#{$infix}-start { justify-content: flex-start !important; }
    .justify-content#{$infix}-end { justify-content: flex-end !important; }
    .justify-content#{$infix}-center { justify-content: center !important; }
    .justify-content#{$infix}-between { justify-content: space-between !important; }
    .justify-content#{$infix}-around { justify-content: space-around !important; }
    .justify-content#{$infix}-evenly { justify-content: space-evenly !important; }

    .align-items#{$infix}-start { align-items: flex-start !important; }
    .align-items#{$infix}-end { align-items: flex-end !important; }
    .align-items#{$infix}-center { align-items: center !important; }
    .align-items#{$infix}-baseline { align-items: baseline !important; }
    .align-items#{$infix}-stretch { align-items: stretch !important; }

    .align-content#{$infix}-start { align-content: flex-start !important; }
    .align-content#{$infix}-end { align-content: flex-end !important; }
    .align-content#{$infix}-center { align-content: center !important; }
    .align-content#{$infix}-between { align-content: space-between !important; }
    .align-content#{$infix}-around { align-content: space-around !important; }
    .align-content#{$infix}-stretch { align-content: stretch !important; }

    .align-self#{$infix}-auto { align-self: auto !important; }
    .align-self#{$infix}-start { align-self: flex-start !important; }
    .align-self#{$infix}-end { align-self: flex-end !important; }
    .align-self#{$infix}-center { align-self: center !important; }
    .align-self#{$infix}-baseline { align-self: baseline !important; }
    .align-self#{$infix}-stretch { align-self: stretch !important; }

    .order#{$infix}-first { order: -1 !important; }
    .order#{$infix}-0 { order: 0 !important; }
    .order#{$infix}-1 { order: 1 !important; }
    .order#{$infix}-2 { order: 2 !important; }
    .order#{$infix}-3 { order: 3 !important; }
    .order#{$infix}-4 { order: 4 !important; }
    .order#{$infix}-5 { order: 5 !important; }
    .order#{$infix}-last { order: 6 !important; }
  }
}

// Grid utilities
@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint-up($breakpoint) {
    .grid#{$infix} { display: grid !important; }

    @for $i from 1 through $grid-columns {
      .g#{$infix}-#{$i},
      .gx#{$infix}-#{$i} {
        --#{$variable-prefix}gutter-x: #{$i * $grid-gutter-width};
      }

      .g#{$infix}-#{$i},
      .gy#{$infix}-#{$i} {
        --#{$variable-prefix}gutter-y: #{$i * $grid-gutter-width};
      }
    }

    @each $value in $grid-row-columns {
      .grid#{$infix}-rows-#{$value} {
        grid-template-rows: repeat($value, minmax(0, 1fr));
      }
    }

    @each $value in $grid-columns {
      .grid#{$infix}-cols-#{$value} {
        grid-template-columns: repeat($value, minmax(0, 1fr));
      }
    }
  }
}

// Auto columns and rows
.grid-auto-cols { grid-auto-columns: 1fr; }
.grid-auto-rows { grid-auto-rows: 1fr; }

// Grid column and row placement
@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint-up($breakpoint) {
    .col#{$infix}-auto { grid-column: auto; }
    .col#{$infix}-span-1 { grid-column: span 1 / span 1; }
    .col#{$infix}-span-2 { grid-column: span 2 / span 2; }
    .col#{$infix}-span-3 { grid-column: span 3 / span 3; }
    .col#{$infix}-span-4 { grid-column: span 4 / span 4; }
    .col#{$infix}-span-5 { grid-column: span 5 / span 5; }
    .col#{$infix}-span-6 { grid-column: span 6 / span 6; }

    .row#{$infix}-auto { grid-row: auto; }
    .row#{$infix}-span-1 { grid-row: span 1 / span 1; }
    .row#{$infix}-span-2 { grid-row: span 2 / span 2; }
    .row#{$infix}-span-3 { grid-row: span 3 / span 3; }
    .row#{$infix}-span-4 { grid-row: span 4 / span 4; }
    .row#{$infix}-span-5 { grid-row: span 5 / span 5; }
    .row#{$infix}-span-6 { grid-row: span 6 / span 6; }
  }
}

// Grid alignment utilities
@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint-up($breakpoint) {
    .place-items#{$infix}-start { place-items: start; }
    .place-items#{$infix}-end { place-items: end; }
    .place-items#{$infix}-center { place-items: center; }
    .place-items#{$infix}-stretch { place-items: stretch; }

    .place-content#{$infix}-start { place-content: start; }
    .place-content#{$infix}-end { place-content: end; }
    .place-content#{$infix}-center { place-content: center; }
    .place-content#{$infix}-stretch { place-content: stretch; }
    .place-content#{$infix}-space-between { place-content: space-between; }
    .place-content#{$infix}-space-around { place-content: space-around; }
    .place-content#{$infix}-space-evenly { place-content: space-evenly; }
  }
}
