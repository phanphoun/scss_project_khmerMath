@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;

// Typography utilities

// Font sizes
@each $size, $value in $font-sizes {
  .font-size-#{$size} {
    font-size: $value !important;
  }
}

// Font weights
.font-weight-light { font-weight: $font-weight-light !important; }
.font-weight-lighter { font-weight: $font-weight-lighter !important; }
.font-weight-normal { font-weight: $font-weight-normal !important; }
.font-weight-bold { font-weight: $font-weight-bold !important; }
.font-weight-bolder { font-weight: $font-weight-bolder !important; }

// Font styles
.font-italic { font-style: italic !important; }
.font-normal { font-style: normal !important; }

// Text alignment
.text-left { text-align: left !important; }
.text-right { text-align: right !important; }
.text-center { text-align: center !important; }

// Text transformation
.text-lowercase { text-transform: lowercase !important; }
.text-uppercase { text-transform: uppercase !important; }
.text-capitalize { text-transform: capitalize !important; }

// Text decoration
.text-decoration-none { text-decoration: none !important; }
.text-decoration-underline { text-decoration: underline !important; }
.text-decoration-line-through { text-decoration: line-through !important; }

// Line height
@each $size, $value in $line-heights {
  .line-height-#{$size} {
    line-height: $value !important;
  }
}

// Letter spacing
@each $size, $value in $letter-spacings {
  .letter-spacing-#{$size} {
    letter-spacing: $value !important;
  }
}

// Text wrapping and overflow
.text-wrap { white-space: normal !important; }
.text-nowrap { white-space: nowrap !important; }
.text-break {
  word-wrap: break-word !important;
  word-break: break-word !important;
}

// Text reset
.text-reset {
  color: inherit !important;
}

// Monospace font
.font-monospace {
  font-family: $font-family-monospace !important;
}

// Responsive text alignment
@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint-up($breakpoint) {
    .text#{$infix}-left { text-align: left !important; }
    .text#{$infix}-right { text-align: right !important; }
    .text#{$infix}-center { text-align: center !important; }
  }
}

// Text truncation
.text-truncate {
  @include text-truncate();
}

// Responsive font sizes
@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint-up($breakpoint) {
    @each $size, $value in $font-sizes {
      .font-size#{$infix}-#{$size} {
        font-size: $value !important;
      }
    }
  }
}
